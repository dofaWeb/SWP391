@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}
@model SWP391_FinalProject.Models.ProductItemModel

<style>
    .option-box {
        border: 2px solid #007bff;
        padding: 10px;
        text-align: center;
        cursor: pointer;
        border-radius: 5px;
        margin: 5px;
        transition: background-color 0.3s;
        flex: 1; /* Allow the boxes to grow */
        min-width: 80px; /* Minimum width for the boxes */
    }

        .option-box:hover {
            background-color: #e9ecef;
        }

    .selected {
        background-color: #007bff;
        color: white;
    }

    .related-product {
        border: 1px solid #ddd;
        border-radius: 5px;
        padding: 10px;
        text-align: center;
    }

    .rating {
        color: gold;
    }
</style>


<div class="container mt-4">
    <div class="row">
        <div class="col-md-12 mb-3">
            <!-- Top-left position -->
            <a asp-action="Index" asp-controller="Pro" class="btn btn-secondary btn-sm">Back</a> <!-- Shorter label and smaller button -->
        </div>
        <!-- Product Image -->
        <div class="col-md-6">
            <img src="~/pictures/@Model.Product.Picture" alt="Product Image" class="img-fluid">
        </div>

        <!-- Product Information -->
        <div class="col-md-6">
            <h2 class="mt-3">@Model.Product.Name</h2>
            <h5 class="text-muted">@Model.SellingPrice</h5>

            <label for="ram">Select RAM:</label>
            <div class="form-group">
                <div class="d-flex justify-content-between">
                    <div class="option-box" onclick="selectOption(this)">8 GB</div>
                    <div class="option-box" onclick="selectOption(this)">16 GB</div>
                    <div class="option-box" onclick="selectOption(this)">32 GB</div>
                </div>
            </div>

            <label for="storage">Select Storage:</label>
            <div class="form-group">
                <div class="d-flex justify-content-between">
                    <div class="option-box" onclick="selectOption(this)">256 GB</div>
                    <div class="option-box" onclick="selectOption(this)">512 GB</div>
                    <div class="option-box" onclick="selectOption(this)">1 TB</div>
                </div>
            </div>

            <a asp-controller="Cart" asp-action="AddToCart" asp-route-id="1" class="btn btn-success mt-3">Add to Cart</a>
        </div>
    </div>

    <!-- Product Description -->
    <div class="mt-4">
        <h3>Description</h3>
        <p>@Model.Product.Description</p>
    </div>

    <!-- Product Rating -->
    <div class="mt-4">
    <h3>Rating</h3>
    <div class="rating-container">
        <span class="rating">
            <span class="star" data-value="0.5">&#9733;</span>
            <span class="star" data-value="1">&#9733;</span>
            <span class="star" data-value="1.5">&#9733;</span>
            <span class="star" data-value="2">&#9733;</span>
            <span class="star" data-value="2.5">&#9733;</span>
            <span class="star" data-value="3">&#9733;</span>
            <span class="star" data-value="3.5">&#9733;</span>
            <span class="star" data-value="4">&#9733;</span>
            <span class="star" data-value="4.5">&#9733;</span>
            <span class="star" data-value="5">&#9733;</span>
        </span>
        <span id="rating-value">(4/5)</span>
    </div>
</div>

    <style>
        .star {
            font-size: 24px;
            cursor: pointer;
            color: lightgray;
        }

            .star.selected {
                color: gold;
            }
    </style>


    <!-- Comments Section -->
    <div class="mt-4">
        <h3>Comments</h3>
        <div class="form-group">
            <textarea class="form-control" rows="3" placeholder="Leave a comment..."></textarea>
        </div>
        <button class="btn btn-primary">Submit Comment</button>

        <div class="mt-3">
            <h5>Previous Comments:</h5>
            <p><strong>User1:</strong> Great product! Highly recommend.</p>
            <p><strong>User2:</strong> It works well, but the battery life could be better.</p>
        </div>
    </div>

    <!-- Related Products Section -->
    <h3 class="mt-5">Related Products</h3>
    <div class="row">
        <!-- Related Product 1 -->
        <div class="col-md-3 mb-4">
            <div class="related-product">
                <a asp-controller="Pro" asp-action="ProductDetail" asp-route-id="1"><img src="https://via.placeholder.com/150" class="img-fluid" alt="Related Product 1"></a>
                <h5>Related Product 1</h5>
                <p>$149.99</p>
                <button class="btn btn-success btn-sm">Add to Cart</button>
            </div>
        </div>
        
        <!-- Related Product 2 -->
        <div class="col-md-3 mb-4">
            <div class="related-product">
                <img src="https://via.placeholder.com/150" class="img-fluid" alt="Related Product 2">
                <h5>Related Product 2</h5>
                <p>$179.99</p>
                <button class="btn btn-success btn-sm">Add to Cart</button>
            </div>
        </div>

        <!-- Related Product 3 -->
        <div class="col-md-3 mb-4">
            <div class="related-product">
                <img src="https://via.placeholder.com/150" class="img-fluid" alt="Related Product 3">
                <h5>Related Product 3</h5>
                <p>$129.99</p>
                <button class="btn btn-success btn-sm">Add to Cart</button>
            </div>
        </div>

        <!-- Related Product 4 -->
        <div class="col-md-3 mb-4">
            <div class="related-product">
                <img src="https://via.placeholder.com/150" class="img-fluid" alt="Related Product 4">
                <h5>Related Product 4</h5>
                <p>$99.99</p>
                <button class="btn btn-success btn-sm">Add to Cart</button>
            </div>
        </div>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function () {
    const stars = document.querySelectorAll('.star');
    const ratingValue = document.getElementById('rating-value');
    const productItemId = '@Model.Id'; // Use Razor to inject the correct product item ID dynamically.
    const username = '@User.FindFirst("Username")?.Value'; // Get the logged-in user's username from the Razor view.

    stars.forEach(star => {
        star.addEventListener('click', function () {
            const selectedValue = this.getAttribute('data-value');
            setSelectedStars(selectedValue);
            ratingValue.textContent = `(${selectedValue}/5)`; // Update the rating display
            
            sendRatingToController(selectedValue, username, productItemId); // Send to the backend
        });
    });

        function setSelectedStars(value) {
        stars.forEach(star => {
            star.classList.remove('selected');
            if (parseFloat(star.getAttribute('data-value')) <= parseFloat(value)) {
                star.classList.add('selected');
            }
        });
    }

        function sendRatingToController(value, username, productItemId) {
        fetch('/Pro/Rating', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'X-CSRF-TOKEN': document.querySelector('meta[name="csrf-token"]')?.getAttribute('content') || ''
            },
                body: JSON.stringify({ Rating: value, Username: username, ProductItemId: productItemId })
        })
        .then(response => {
            if (!response.ok) {
                throw new Error('Network response was not ok');
            }
            return response.json();
        })
        .then(data => console.log('Rating sent successfully:', data))
        .catch(error => console.error('Error sending rating:', error));
    }
        function selectOption(selected) {
        // Deselect all options in the group
        const options = selected.parentElement.children;
        for (let i = 0; i < options.length; i++) {
            options[i].classList.remove('selected');
        }
        // Select the current option
        selected.classList.add('selected');
    }
    });
</script>