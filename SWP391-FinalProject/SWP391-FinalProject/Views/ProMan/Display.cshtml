@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
    Layout = "_AdminLayout";
}
@using System.Security.Claims

@model IEnumerable<SWP391_FinalProject.Models.ProductModel>;

<style>
    body {
        display: flex;
    }
    /* Sidebar styles */
    .sidebar {
        width: 250px;
        background-color: #343a40;
        color: white;
        min-height: 100vh;
        padding-top: 20px;
    }

        .sidebar ul {
            list-style: none;
            padding-left: 0;
        }

            .sidebar ul li {
                padding: 10px;
            }

                .sidebar ul li a {
                    color: white;
                    text-decoration: none;
                }

                    .sidebar ul li a:hover {
                        color: #ffdd57;
                    }

    .content {
        flex-grow: 1;
        padding: 20px;
    }

    .product-img {
        width: 50px; /* Adjust width as needed */
        height: auto; /* Maintain aspect ratio */
    }
</style>
@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success" role="alert">
        @TempData["SuccessMessage"]
    </div>
}else if(TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger" role="alert">
        @TempData["ErrorMessage"]
    </div>
}
<h2>Product List</h2>
@if (User.Identity.IsAuthenticated)
{
    var roleClaim = User.FindFirst(ClaimTypes.Role);
    if (roleClaim.Value == "Role0001")
    {
        <div class="mb-3">
            <a asp-action="AddProduct" asp-controller="ProMan" class="btn btn-success">Add New Product</a>
        </div>
    }
}



<form asp-controller="ProMan" asp-action="Display" method="post" class="input-group mb-3">
    <input type="text" name="keyword" class="form-control" placeholder="Enter product Name or Id..." aria-label="Search product">

    <div class="input-group-append">
        <button class="btn btn-primary" type="submit">Search</button>
    </div>
</form>
<div style="max-height: 400px; overflow-y: auto;">
<table class="table table-bordered">
    <thead class="thead-dark">
        <tr>
            <th>ID</th>
            <th>Picture</th>
            <th>Name</th>
            <th>Brand</th>
            <th>Stock</th>
            <th>Status</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>@item.Id</td>
                <td><img src="~/pictures/@item.Picture" alt="Product 1" class="product-img"></td>
                <td>@item.Name</td>
                <td>@item.CategoryName</td>
                <td>@item.Quantity</td>
                <td>
                    @{
                        string badgeClass;
                        switch (item.ProductState)
                        {
                            case "Available":
                                badgeClass = "badge-success"; // Green for Available
                                break;
                            case "Unavailable":
                                badgeClass = "badge-warning"; // Yellow for Unavailable
                                break;
                            case "Out of Stock":
                                badgeClass = "badge-danger"; // Red for Out of Stock
                                break;
                            default:
                                badgeClass = "badge-secondary"; // Gray for unknown states
                                break;
                        }
                    }
                    <span class="badge @badgeClass">@item.ProductState</span>
                </td>
                <td>
                    @if (User.Identity.IsAuthenticated)
                    {
                        var roleClaim = User.FindFirst(ClaimTypes.Role);
                        if (roleClaim.Value == "Role0001")
                        {
                            <a  class="btn btn-danger btn-sm" asp-controller="ProMan" asp-action="DeleteProduct" asp-route-id="@item.Id"
                                   onclick="return confirm('Are you sure you want to delete this product?')">Delete</a>
                        }                       
                    }
                    <a asp-controller="ProMan" asp-action="EditProduct" asp-route-id="@item.Id" class="btn btn-warning btn-sm">Edit</a>
                    <a class="btn btn-secondary btn-gray" asp-controller="ProMan" asp-action="Disable" asp-route-id="@item.Id">@(item.ProductState != "Unavailable" ? "Disable" : "Active")</a>
                  
                </td>
            </tr>

        }
    </tbody>
</table>
</div>

<script>
    function deleteProduct(productId) {
        if (confirm('Are you sure you want to delete this product?')) {
            // Add your delete logic here
            console.log('Product ' + productId + ' deleted.');
        }
    }

    // Search functionality
   
</script>